name: "leptosfmt action"
description: "Formatter for the leptos view! macros"

inputs:
  args:
    description: "leptosfmt arguments (https://github.com/bram209/leptosfmt?tab=readme-ov-file#usage)"
    default: "./**/*.rs --check"
    required: false
  leptosfmtVersion:
    description: "Use custom version of leptosfmt"
    default: 0.1.32
    required: false
  output:
    description: "Summary output file path"
    default: "leptosfmt_output.txt"
    required: false
  debug:
    description: "Enable debug output"
    default: "false"
  failOnError:
    description: "Fail if leptosfmt returns a non-zero exit code"
    default: "true"
    required: false

outputs:
  exit_code:
    description: "The exit code returned from leptosfmt"
    value: ${{ steps.leptosfmt.outputs.exit_code }}

runs:
  using: "composite"
  steps:
    - name: Set up environment
      run: |
        echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        mkdir -p "$HOME/.local/bin"
      shell: bash

    - name: Clean up existing leptosfmt files
      run: |
        # Remove any existing leptosfmt binaries or archives to prevent conflicts
        rm -f $(which leptosfmt)
      shell: bash

    - name: Download and install leptosfmt
      id: leptosfmt-setup
      run: |
        # Determine filename and download URL based on version
        FILENAME="leptosfmt-${LEPTOSFMT_VERSION}-x86_64-unknown-linux-musl.tar.gz"
        DOWNLOAD_URL="https://github.com/bram209/leptosfmt/releases/download/${LEPTOSFMT_VERSION}/${FILENAME}"

        TMPDIR=$(mktemp -d)
        pushd $TMPDIR
        echo "Downloading from: ${DOWNLOAD_URL}"
        curl -sfLO "${DOWNLOAD_URL}"

        echo "Extracting ${FILENAME}"
        tar -xvzf "${FILENAME}" > /dev/null

        echo "Installing leptosfmt"
        install --target-directory "$HOME/.local/bin" -D leptosfmt

        popd
        echo "Cleaning up temporary files in $TMPDIR"
        rm -rf $TMPDIR
      env:
        LEPTOSFMT_VERSION: ${{ inputs.leptosfmtVersion }}
      shell: bash

    - name: Run leptosfmt
      id: leptosfmt
      run: ${{ github.action_path }}/entrypoint.sh
      env:
        # https://github.com/actions/runner/issues/665
        INPUT_ARGS: ${{ inputs.ARGS }}
        INPUT_OUTPUT: ${{ inputs.OUTPUT }}
        INPUT_DEBUG: ${{ inputs.DEBUG }}
        INPUT_FAIL_ON_ERROR: ${{ inputs.FAIL_ON_ERROR }}
      shell: bash
branding:
  icon: "external-link"
  color: "purple"
